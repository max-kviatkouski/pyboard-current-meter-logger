import sys
import pandas as pd
import numpy as np
from numpy.linalg import norm
from math import acos, degrees
import matplotlib.pyplot as plt

FREQUENCY = '10T'

if len(sys.argv) < 2:
    print("""Usage: {} <daily_log_csv>
    Scripts expects file <daily_log_csv>.zero to exist in the same folder. That file should contain 3-elements array representing
    values of accelerometer when buoy was supposedly still and upright.
    That file is generated by show_accel_values.py""")
    exit(1)

csv_filename = sys.argv[1]
zero_filename = "{}.zero".format(csv_filename)

def get_angle(v1, v2):
    dot_product = np.dot(v1, v2)
    length_product = norm(v1) * norm(v2)
    return degrees(acos(dot_product / length_product))

def row_to_vector(pd_row):
    return np.array([pd_row[0], pd_row[1], pd_row[2]])

with open(zero_filename) as zfile:
    log_df = pd.read_csv(csv_filename, squeeze=True, parse_dates=True, index_col=0)
    ZERO_VECTOR = np.array([int(coord.strip()) for coord in zfile.readline().strip('[]').split(',')])
    averaged_df = log_df.resample(FREQUENCY).mean()
    angles_df = averaged_df.apply(lambda x: get_angle(row_to_vector(x), ZERO_VECTOR), axis = 1)
    plt.plot(angles_df)
    plt.ylim(-180, 180)
    plt.show()
    #convert to DataFrame from Series so we can save with Column names in headers
    angles_df = angles_df.to_frame('Meter Tilt (in degrees)')
    report_name = "{}.{}.{}.csv".format(csv_filename.replace('.csv', ''), 'tilt-from-vertical', FREQUENCY)
    print("Saving to {}".format(report_name))
    angles_df.to_csv(report_name, header=True)
